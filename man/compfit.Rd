% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compfit.R
\name{compfit}
\alias{compfit}
\title{Compare Multiple Regression Models}
\usage{
compfit(
  data,
  outcome,
  model_list,
  model_names = NULL,
  model_type = "auto",
  family = "binomial",
  conf_level = 0.95,
  include_coefficients = FALSE,
  scoring_weights = NULL,
  var_labels = NULL,
  ...
)
}
\arguments{
\item{data}{A data.frame or data.table containing the dataset.}

\item{outcome}{Character string specifying the outcome variable. For survival
analysis, use Surv() syntax (e.g., "Surv(time, status)").}

\item{model_list}{List of character vectors, each containing predictor names
for one model. Can also be a single character vector to auto-generate nested models.}

\item{model_names}{Character vector of names for each model. If NULL, uses
"Model 1", "Model 2", etc. Default is NULL.}

\item{model_type}{Character string specifying model type. If "auto", detects
based on outcome. Options: "auto", "glm", "lm", "coxph", "clogit".
Default is "auto".}

\item{family}{For GLM models, the error distribution family. Default is "binomial".}

\item{conf_level}{Numeric confidence level for intervals. Default is 0.95.}

\item{include_coefficients}{Logical. If TRUE, includes a second table with
coefficient estimates. Default is FALSE.}

\item{scoring_weights}{Named list of scoring weights. Each weight should be
between 0 and 1, and they should sum to 1. Available metrics depend on model
type. If NULL, uses sensible defaults. See Details for available metrics.}

\item{var_labels}{Named character vector for custom variable labels. Default is NULL.}

\item{...}{Additional arguments passed to model fitting functions.}
}
\value{
A data.table with class "compfit_result" containing:
  \item{Model}{Model name/identifier}
  \item{N}{Sample size}
  \item{Events}{Number of events (for survival/logistic)}
  \item{Predictors}{Number of predictors}
  \item{Converged}{Whether model converged properly}
  \item{AIC}{Akaike Information Criterion}
  \item{BIC}{Bayesian Information Criterion}
  \item{Pseudo-R^2}{McFadden's pseudo-R-squared (GLM)}
  \item{Concordance}{C-statistic (logistic/survival)}
  \item{Brier Score}{Brier accuracy score (logistic)}
  \item{Global p}{Overall model p-value}
  \item{Recommendation}{Scoring metric for model selection}
  
  Attributes include:
  \item{models}{List of fitted model objects}
  \item{coefficients}{Coefficient comparison table (if requested)}
  \item{best_model}{Name of recommended model}
}
\description{
Fits multiple regression models and provides a comprehensive comparison table
with model quality metrics, convergence diagnostics, and selection guidance.
Provides a package-specific heuristic ("FastFit Score") combining multiple
quality metrics to facilitate rapid model comparison.
}
\details{
This function fits all specified models and computes comprehensive quality
metrics for comparison. It also generates a composite score ("FastFit Score")
that combines multiple metrics: lower AIC/BIC (information criteria), higher
concordance (discrimination), and model convergence status.

For GLMs, McFadden's pseudo-R-squared is calculated as 1 - (logLik/logLik_null).
For survival models, the global p-value comes from the log-rank test.

Models that fail to converge are flagged and penalized in the FastFit Score.

Scoring weights can be customized based on model type:
\itemize{
  \item GLM: "convergence", "aic", "concordance", "pseudo_r2", "brier" 
  \item Cox: "convergence", "aic", "concordance", "global_p"
  \item Linear: "convergence", "aic", "pseudo_r2", "rmse"
}
Default weights emphasize discrimination (concordance) and model fit (AIC).

n.b.: The FastFit score is designed to be a tool to quickly rank various models
by their quality metrics.  It should be used alongside traditional model
selection criteria rather than as a definitive selection method.
}
\examples{
\dontrun{
# Compare nested models
models <- list(
  base = c("age", "sex"),
  clinical = c("age", "sex", "bmi", "smoking"),
  full = c("age", "sex", "bmi", "smoking", "diabetes", "hypertension")
)

comparison <- compfit(data = mydata,
                     outcome = "disease",
                     model_list = models,
                     model_names = c("Base", "Clinical", "Full"))
print(comparison)

# Auto-detect model type for survival outcome
surv_models <- list(
  simple = c("age", "stage"),
  complex = c("age", "stage", "grade", "treatment")
)

surv_comp <- compfit(lung,
                    outcome = "Surv(time, status)",
                    model_list = surv_models,
                    model_type = "auto")

# Include coefficient comparison
detailed <- compfit(data, outcome, models,
                   include_coefficients = TRUE)
coef_table <- attr(detailed, "coefficients")

# Export comparison table
tbl2pdf(comparison, "model_comparison.pdf")
}

}
\seealso{
\code{\link{fit}} for individual model fitting,
\code{\link{fastfit}} for automated variable selection,
\code{\link{tbl2pdf}} for exporting results
}
