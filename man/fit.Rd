% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit.R
\name{fit}
\alias{fit}
\title{Unified Interface for Model Fitting with Formatted Output}
\usage{
fit(
  data,
  outcome,
  predictors,
  model_type = "glm",
  family = "binomial",
  interaction_terms = NULL,
  strata = NULL,
  cluster = NULL,
  weights = NULL,
  conf_level = 0.95,
  keep_qc_stats = TRUE,
  add_reference_rows = TRUE,
  digits = 2,
  digits_p = 3,
  var_labels = NULL,
  ...
)
}
\arguments{
\item{data}{A data.frame or data.table containing the analysis dataset.}

\item{outcome}{Character string specifying the outcome variable. For survival
analysis, use Surv() syntax (e.g., "Surv(time, status)").}

\item{predictors}{Character vector of predictor variable names to include
in the model.}

\item{model_type}{Character string specifying the regression model type:
\itemize{
  \item "glm" - Generalized linear model
  \item "lm" - Linear model
  \item "coxph" - Cox proportional hazards
  \item "clogit" - Conditional logistic regression
  \item "coxme" - Mixed effects Cox model
  \item "glmer" - Generalized linear mixed effects model
}
Default is "glm".}

\item{family}{For GLM models, the error distribution family. Common options:
"binomial" (logistic), "poisson" (count), "gaussian" (normal), "Gamma".
Default is "binomial". See \code{\link[stats]{family}}.}

\item{interaction_terms}{Character vector of interaction terms using colon syntax.
Example: c("age:sex", "treatment:stage"). Default is NULL.}

\item{strata}{For Cox/conditional logistic models, character string naming the
stratification variable. Default is NULL.}

\item{cluster}{For Cox models, character string naming the variable for robust
clustered standard errors. Default is NULL.}

\item{weights}{Character string naming the weights variable in data. The weights
column should contain numeric values. Default is NULL.}

\item{conf_level}{Numeric confidence level for confidence intervals. Must be
between 0 and 1. Default is 0.95 (95 percent CI).}

\item{keep_qc_stats}{Logical. If TRUE, includes model quality statistics
(AIC, BIC, concordance, etc) in the raw data attribute. Default is TRUE.}

\item{add_reference_rows}{Logical. If TRUE, adds rows for reference categories
of factor variables. Default is TRUE.}

\item{digits}{Integer specifying decimal places for effect estimates.
Default is 2.}

\item{digits_p}{Integer specifying decimal places for p-values.
Default is 3.}

\item{var_labels}{Named character vector for custom variable labels.
Default is NULL.}

\item{...}{Additional arguments passed to the underlying model function
(e.g., subset, na.action, control parameters).}
}
\value{
A data.table with class "fit_result" containing formatted results:
  \item{Variable}{Predictor name with custom label if provided}
  \item{Group}{Factor level, interaction term, or statistic label}
  \item{n}{Sample size}
  \item{events}{Number of events (survival/logistic models)}
  \item{Multivariable aOR/aHR/aRR (95\% CI)}{Adjusted effect with CI}
  \item{p-value}{Formatted p-value}
  
  Attributes include:
  \item{model}{The fitted model object}
  \item{raw_data}{Unformatted numeric results}
  \item{formula_str}{The model formula as a string}
  \item{model_scope}{Either "Univariable" or "Multivariable"}
  \item{model_type}{The regression type used}
}
\description{
Provides a consistent interface for fitting various regression models with
automatic formatting of results for publication. Supports multiple model types
with a unified syntax.
}
\details{
The function automatically detects whether the model is univariable (single
predictor) or multivariable (multiple predictors) and labels the output
accordingly. For multivariable models, effect estimates are labeled as
adjusted (aOR, aHR, aRR).

Interaction terms are specified using colon notation and are included in
addition to main effects. For stratified analyses in survival models, the
strata variable creates separate baseline hazards for each stratum level.

The formatted output is publication-ready and can be exported directly using
tbl2pdf(), tbl2tex(), or tbl2html() functions.
}
\examples{
\dontrun{
# Multivariable logistic regression
model1 <- fit(data = mydata,
              outcome = "disease",
              predictors = c("age", "sex", "smoking"),
              model_type = "glm",
              family = "binomial")
print(model1)

# Cox model with stratification
library(survival)
cox_model <- fit(data = lung,
                 outcome = "Surv(time, status)",
                 predictors = c("age", "sex", "ph.ecog"),
                 model_type = "coxph",
                 strata = "inst")

# Model with interactions and custom labels
labels <- c(age = "Age (years)",
            bmi = "Body Mass Index",
            treatment = "Treatment Group")
interact_model <- fit(data = trial_data,
                      outcome = "response",
                      predictors = c("age", "bmi", "treatment"),
                      interaction_terms = c("age:treatment"),
                      var_labels = labels)

# Linear regression with weights
weighted_model <- fit(data = survey_data,
                      outcome = "income",
                      predictors = c("education", "experience"),
                      model_type = "lm",
                      weights = "survey_weight")

# Access the underlying model
raw_model <- attr(model1, "model")
summary(raw_model)

# Access raw numeric results
raw_data <- attr(model1, "raw_data")

# Export formatted results
tbl2pdf(model1, "regression_results.pdf")
}

}
\seealso{
\code{\link{uscreen}} for univariable screening,
\code{\link{fastfit}} for complete analysis workflow,
\code{\link{m2dt}} for model-to-data.table conversion,
\code{\link{tbl2pdf}} for PDF export
}
